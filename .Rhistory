filter(RT > 0) %>%
mutate(ind = 1:nrow(RT)) %>%
arrange(desc(RT)) %>%
mutate(cond = ifelse(t_stim == 0.75, 'prac', 'var'))
all_blks2 <- blks %>%
bind_rows() %>%
na.omit() %>%
mutate(success = ifelse(targ_finger == press_finger, 1, 0)) %>%
mutate(RT = t_press - t_stim)
all_blks2 <- all_blks %>% filter(RT > 0)
all_blks2 <- all_blks2 %>% filter(RT > 0)
all_blks2 <- all_blks2 %>% mutate(ind = 1:nrow(RT))
all_blks2 <- all_blks2 %>% mutate(ind = 1:nrow())
all_blks2 <- all_blks2 %>% mutate(ind = add_rownames())
?add_rownames
blks <- list()
blknames <- list.files('csvfiles')
i <- 1
for (file in blknames) {
blks[[i]] <- read.csv(paste0('csvfiles/',file), header = TRUE)
i <- i + 1
}
all_blks2 <- blks %>%
bind_rows() %>%
na.omit() %>%
mutate(success = ifelse(targ_finger == press_finger, 1, 0)) %>%
mutate(RT = t_press - t_stim) %>%
filter(RT > 0) %>%
add_rownames(var = 'ind') %>%
arrange(desc(RT)) %>%
mutate(cond = ifelse(t_stim == 0.75, 'prac', 'var'))
all_blks2
head(all_blks)
blks <- list()
blknames <- list.files('csvfiles')
i <- 1
for (file in blknames) {
blks[[i]] <- read.csv(paste0('csvfiles/',file), header = TRUE)
i <- i + 1
}
all_blks2 <- blks %>%
bind_rows() %>%
na.omit() %>%
mutate(success = ifelse(targ_finger == press_finger, 1, 0)) %>%
mutate(RT = t_press - t_stim) %>%
filter(RT > 0) %>%
add_rownames(var = 'ind') %>%
arrange(RT) %>%
mutate(cond = ifelse(t_stim == 0.75, 'prac', 'var'))
all_blks2
all_blks
all_blks2
head(all_blks)
source('~/.active-rstudio-document', echo=TRUE)
summary(m2)
df
?acf
summarize(df)
summary(df)
summary(all_blks)
filter(all_blks, day > 4)
df <- filter(all_blks, cond == "var" & day > 1 & ind > 600)
summary(df)
df
ggplot(all_blks,
aes(x = RT, y = factor(targ_finger),
color = factor(press_finger))) +
geom_jitter(alpha = .6) +
facet_wrap(~day)
sumary(filter(all_blks, cond == 'var' & day > 1))
summary(filter(all_blks, cond == 'var' & day > 1))
df <- filter(all_blks, cond == "var" & day > 1)
df
summary(df)
df_roll <- data.frame(roll_succ = rollmean(df$success, 70),
roll_rt = rollmean(df$RT, 70))
m0 <- glm(success ~ RT,
data = df,
family = binomial(psyphy::mafc.probit(4)))
m1 <- update(m0, . ~ 0 + RT * day)
m2 <- update(m0, . ~ 0 + RT * factor(day))
summary(m2)
df$resp0 <- predict(m0, type = "response")
df$resp1 <- predict(m1, type = "response")
df$resp2 <- predict(m2, type = "response")
ggplot(df,
aes(RT, press_finger,
colour = factor(targ_finger))) +
geom_jitter(size = 2.3, width = .1,
height = .2, alpha = .6) +
labs(x = "Reaction Time (s)",
y = "Target Finger",
colour = "Digit\ndigit")
ggplot(data = df, aes(x = RT, y = success)) +
geom_line(aes(y = resp0,
colour = "Null GLM"),
size = 1.5, alpha = 0.6) +
geom_line(aes(y = resp1,
colour = "Days GLM"),
size = 1.5, alpha = 0.6) +
geom_line(aes(y = resp2,
colour = "factor(days) GLM"),
size = 1.5, alpha = 0.6) +
#     geom_line(data = df_roll,
#               aes(roll_rt, roll_succ,
#                   colour = "Windowed Average"),
#               size = 1.5) +
geom_point(aes(colour = "Raw Values"), size = 2, shape = 124) +
facet_wrap(~day)
df$resp0 <- predict(m0,)
df$resp1 <- predict(m1,)
df$resp2 <- predict(m2,)
ggplot(df,
aes(RT, press_finger,
colour = factor(targ_finger))) +
geom_jitter(size = 2.3, width = .1,
height = .2, alpha = .6) +
labs(x = "Reaction Time (s)",
y = "Target Finger",
colour = "Digit\ndigit")
ggplot(data = df, aes(x = RT, y = success)) +
geom_line(aes(y = resp0,
colour = "Null GLM"),
size = 1.5, alpha = 0.6) +
geom_line(aes(y = resp1,
colour = "Days GLM"),
size = 1.5, alpha = 0.6) +
geom_line(aes(y = resp2,
colour = "factor(days) GLM"),
size = 1.5, alpha = 0.6) +
#     geom_line(data = df_roll,
#               aes(roll_rt, roll_succ,
#                   colour = "Windowed Average"),
#               size = 1.5) +
#geom_point(aes(colour = "Raw Values"), size = 2, shape = 124) +
facet_wrap(~day)
summary(m2)
df
df2 <- df %>% arrange(ind)
df2
acf(df2$t_press)
acf(df2$RT)
acf(df2$press_finger)
str(acf(df2$press_finger))
aa <- acf(df2$press_finger)
aa$series <- "Pressed finger"
aa
plot(aa)
df33 <- with(aa, data.frame(lag,acf))
df33
df_auto <- with(acf(df2$press_finger), data.frame(lag, acf))
ggplot(df_auto, aes(x = lag, y = acf)) +
geom_hline(yintercept = 0) +
geom_segment(aes(xend = lag, yend = 0))
?acf
?plot.acf
acf(df2$press_finger, ci.type = "ma")
aa <- acf(df2$press_finger, ci.type = "ma")
str(aa)
str(plot(aa))
plot(aa)
getS3method("plot", "acf")
acf(df2$press_finger - df2$targ_finger, ci.type = "ma")
plot(df2$press_finger - df2$targ_finger)
plot(df2$press_finger - df2$targ_finger, type = "l")
acf(df2$targ_finger)
source('~/.active-rstudio-document', echo=TRUE)
anova(m0, m2)
anova(m0, m2, test = "LRT")
aa <- profile(m2)
plot(aa)
pairs(aa)
aa <- profile(m2, alpha = .1)
pairs(aa)
plot(aa)
confint(aa)
aa <- profile(m2)
confint(aa)
glmfit <- function(data) {
fit <- glm(success ~ RT, data = data, family = binomial(psyphy::mafc.probit(4)))
return(predict(fit, type = "response"))
}
library(boot)
bb <- boot(data = df, statistic = glmfit, R = 10)
glmfit <- function(data,indices) {
fit <- glm(success ~ RT, data = data[indices,], family = binomial(psyphy::mafc.probit(4)))
return(predict(fit, type = "response"))
}
bb <- boot(data = df, statistic = glmfit, R = 10)
plot(bb, index = 1)
bb <- boot(data = df, statistic = glmfit, R = 1000)
warnings()
bb
summary(bb)
boot.ci(bb, type = "bca", index = 1)
boot.ci(bb, index = 1)
?boot.ci
boot.ci(bb, index = 1, type = "basic")
boot.ci(bb, index = 1, type = "perc")
df
bb$t0[1]
df$pred <- bb$t0
df
df
cc <- boot.ci(bb, type = "perc")
str(cc)
cc <- boot.ci(bb, type = "perc", 1:1487)
cc
glmfit <- function(data,indices) {
fit <- glm(success ~ RT, data = data[indices,], family = binomial(psyphy::mafc.probit(4)))
return(coef(fit))
}
bb <- boot(data = df, statistic = glmfit, R = 100)
bb
glmfit <- function(data,indices) {
fit <- glm(success ~ RT * factor(week), data = data[indices,], family = binomial(psyphy::mafc.probit(4)))
return(coef(fit))
}
bb <- boot(data = df, statistic = glmfit, R = 100)
glmfit <- function(data,indices) {
fit <- glm(success ~ RT * factor(day), data = data[indices,], family = binomial(psyphy::mafc.probit(4)))
return(coef(fit))
}
bb <- boot(data = df, statistic = glmfit, R = 100)
bb
confint(profile(m2))
coef(m2)
glmfit <- function(data,indices) {
fit <- glm(success ~ 0 + RT * factor(day), data = data[indices,], family = binomial(psyphy::mafc.probit(4)))
return(coef(fit))
}
bb <- boot(data = df, statistic = glmfit, R = 100)
bb
confint(profile(m2))
boot.ci(bb, type = "perc")
boot.ci(bb, type = "perc", index = 1:8)
sapply(boot.ci, bb, type = "perc")
sapply(FUN = boot.ci, bb, type = "perc")
sapply(FUN = boot.ci, X = bb, type = "perc")
sapply(FUN = boot.ci, X = bb)
?sapply
sapply(X = bb, FUN = boot.ci)
lapply(X = bb, FUN = boot.ci)
bb
str(boot.ci(bb, index = 1))
str(boot.ci(bb, index = 1, type = "perc"))
boot.ci(bb, index = 1, type = "perc")$perecnt
boot.ci(bb, index = 1, type = "perc")$percent
sapply(X = 1:8, FUN = function(x) {boot.ci(bb, index = x, type = "perc")$percent})
t(sapply(X = 1:8, FUN = function(x) {boot.ci(bb, index = x, type = "perc")$percent)})
t(sapply(X = 1:8, FUN = function(x) {boot.ci(bb, index = x, type = "perc")$percent)})
t(sapply(X = 1:8, FUN = function(x) {boot.ci(bb, index = x, type = "perc")$percent}))
confint(profile(m2))
bb <- boot(data = df, statistic = glmfit, R = 1000)
t(sapply(X = 1:8, FUN = function(x) {boot.ci(bb, index = x, type = "perc")$percent}))
confint(profile(m2))
plot(bb, index = 1)
plot(bb, index = 2)
plot(bb, index = 3)
plot(bb, index = 4)
plot(bb, index = 5)
plot(bb, index = 6)
plot(bb, index = 7)
plot(bb, index = 8)
coef(m2)
coef(m2)[2]/coef(m2)[1]
-coef(m2)[2]/coef(m2)[1]
aa <- coef(m2)
-aa[2]/aa[1]
-aa[3]/aa[6]
-aa[3]/(aa[6] + aa[1])
-aa[4]/(aa[7] + aa[1])
-aa[8]/(aa[8] + aa[1])
-aa[5]/(aa[8] + aa[1])
b[1] <- 1
b <- zeros(4,1)
b <- eye(4,1)
b <- ones(4,1)
b <- nan(4,1)
b <- vector(0, 4)
?vector
b <- c(0, 0, 0, 0)
b[1]
coef(m2)
options(contrasts = c("contr.sum", "contr.poly"))
m0 <- glm(success ~ RT,
data = df,
family = binomial(psyphy::mafc.probit(4)))
m2 <- update(m0, . ~ 0 + RT * factor(day))
m2
summary(m2)
m2 <- update(m0, . ~  RT * factor(day))
coef(m2)
m2
summary(m2)
coef(m2)
m2 <- update(m0, . ~ 0 + RT * factor(day))
summary(m2)
coef(m2)
glmfit <- function(data,indices) {
fit <- glm(success ~ 0 + RT * factor(day),
data = data[indices,],
family = binomial(psyphy::mafc.probit(4)))
temp <- coef(fit)
b <- c(0, 0, 0, 0)
b[1] <- -temp[2] / temp[1]
b[2] <- -temp[3] / (temp[1] + temp[6])
b[3] <- -temp[4] / (temp[1] + temp[7])
b[4] <- -temp[5] / (temp[1] + temp[8])
return(b)
}
bb <- boot(data = df, statistic = glmfit, R = 100)
boots <- t(sapply(X = 1:4, FUN = function(x) {boot.ci(bb, index = x, type = "perc")$percent}))
boots
boots <- boots[,4:5]
bb$t0
boots[,3] <- bb$t0
boots
boots <- t(sapply(X = 1:4, FUN = function(x) {boot.ci(bb, index = x, type = "perc")$percent}))
boots <- data.frame(lowci = boots[,4], hici = boots[,5])
boots$orig <- bb$t0
boots
fit <- m2
temp <- coef(fit)
b <- c(0, 0, 0, 0)
b[1] <- -temp[2] / temp[1]
b[2] <- -temp[3] / (temp[1] + temp[6])
b[3] <- -temp[4] / (temp[1] + temp[7])
b[4] <- -temp[5] / (temp[1] + temp[8])
b
acf(resid(m2))
acf(resid(m2, type = "response"))
glmfit <- function(data,indices) {
fit <- glm(success ~ 0 + RT * factor(day),
data = data[indices,],
family = binomial(psyphy::mafc.probit(4)))
temp <- coef(fit)
b <- c(0, 0, 0, 0)
b[1] <- -temp[2] / temp[1]
b[2] <- -temp[3] / (temp[1] + temp[6])
b[3] <- -temp[4] / (temp[1] + temp[7])
b[4] <- -temp[5] / (temp[1] + temp[8])
return(b)
}
bb <- boot(data = df, statistic = glmfit, R = 1000)
boots <- t(sapply(X = 1:4, FUN = function(x) {boot.ci(bb, index = x, type = "perc")$percent}))
boots <- data.frame(lowci = boots[,4], hici = boots[,5])
boots$orig <- bb$t0
bb <- boot(data = df, statistic = glmfit, R = 500)
seed(1)
bb <- boot(data = df, statistic = glmfit, R = 500)
set.seed(1)
set.seed(1)
bb <- boot(data = df, statistic = glmfit, R = 500)
boots <- t(sapply(X = 1:4, FUN = function(x) {boot.ci(bb, index = x, type = "perc")$percent}))
boots <- data.frame(lowci = boots[,4], hici = boots[,5])
boots$orig <- bb$t0
boots
boxplot(boots$orig)
boots$day <- c(1, 2, 3, 4)
boots
boots[c(4,3,2,1),]
boots[,c(4,3,2,1)]
boots <- t(sapply(X = 1:4, FUN = function(x) {boot.ci(bb, index = x, type = "perc")$percent}))
boots <- data.frame(hici = boots[,5], lowci = boots[,4])
boots$orig <- bb$t0
boots$day <- c(1, 2, 3, 4)
boots <- boots[,c(4,3,2,1)]
boots
ggplot(boots, aes(x = factor(day), y = orig, ymin = lowci, ymax = hici)) + geom_errorbar()
ggplot(boots, aes(x = factor(day), y = orig, ymin = lowci, ymax = hici)) + geom_errorbar() + geom_point()
ggplot(boots, aes(x = factor(day), y = orig, ymin = lowci, ymax = hici)) + geom_errorbar() + geom_point(size = 2)
ggplot(boots, aes(x = factor(day), y = orig, ymin = lowci, ymax = hici)) + geom_errorbar() + geom_point(size = 4)
ggplot(boots, aes(x = factor(day), y = orig, ymin = lowci, ymax = hici, colour = factor(day))) + geom_errorbar() + geom_point(size = 4)
ggplot(boots, aes(x = factor(day), y = orig, ymin = lowci, ymax = hici, colour = factor(day))) + geom_errorbar() + geom_point(size = 4) + theme_bw()
ggplot(boots, aes(x = factor(day), y = orig, ymin = lowci, ymax = hici, colour = factor(day))) + geom_errorbar(size = 2) + geom_point(size = 4) + theme_bw()
ggplot(boots, aes(x = factor(day), y = orig, ymin = lowci, ymax = hici, colour = factor(day))) + geom_errorbar(size = 1.6) + geom_point(size = 4) + theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
colour = factor(day))) +
geom_point(size = 4) +
geom_errorbar(size = 1.6) +
theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
fill = factor(day))) +
geom_point(size = 4) +
geom_errorbar(size = 1.6) +
theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
fill = factor(day))) +
geom_point(size = 4, pch = 21) +
geom_errorbar(size = 1.6) +
theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
colour = factor(day))) +
geom_point(size = 4, pch = 21) +
geom_errorbar(size = 1.6) +
theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
fill = factor(day))) +
geom_point(size = 4, pch = 21) +
geom_errorbar(size = 1.2) +
theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
fill = factor(day))) +
geom_errorbar(size = 1.2) +
theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
fill = factor(day))) +
geom_errorbar(size = 1.6) +
geom_point(size = 4, pch = 21) +
theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
fill = factor(day))) +
geom_errorbar(size = 1.1, width = .1) +
geom_point(size = 4, pch = 21) +
theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
fill = factor(day))) +
geom_errorbar(size = 1, width = .1) +
geom_point(size = 4, pch = 21) +
theme_bw()
set.seed(1)
bb <- boot(data = df, statistic = glmfit, R = 1000)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
fill = factor(day), colour = factor(day))) +
geom_errorbar(size = 1, width = .1) +
geom_point(size = 5, pch = 21) +
theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
colour = factor(day))) +
geom_errorbar(size = 1, width = .1, alpha = .6) +
geom_point(size = 5, pch = 21) +
theme_bw()
ggplot(boots,
aes(x = factor(day),
y = orig,
ymin = lowci,
ymax = hici,
colour = factor(day))) +
geom_errorbar(size = 1, width = .1, alpha = .6) +
geom_point(size = 5) +
theme_bw()
source('~/.active-rstudio-document', echo=TRUE)
boots
bb$t0
glmfit <- function(data,indices) {
fit <- glm(success ~ 0 + RT * factor(day),
data = data[indices,],
family = binomial(psyphy::mafc.probit(4)))
temp <- coef(fit)
b <- c(0, 0, 0, 0)
b[1] <- -temp[2] / temp[1]
b[2] <- -temp[3] / (temp[1] + temp[6])
b[3] <- -temp[4] / (temp[1] + temp[7])
b[4] <- -temp[5] / (temp[1] + temp[8])
return(b)
}
set.seed(1)
bb <- boot(data = df, statistic = glmfit, R = 100)
bb$t0
boots <- t(sapply(X = 1:4, FUN = function(x) boot.ci(bb, index = x, type = "perc")$percent))
boots
boots <- t(sapply(X = 1:4, FUN = function(x) boot.ci(bb, index = x, type = "perc")$percent))
boots <- data.frame(day = 1:4, orig = bb$t0,
lowci = boots[,4], hici = boots[,5])
boots
m2
